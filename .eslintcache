[{"/Users/dea/Code/Projects/olympics/src/index.js":"1","/Users/dea/Code/Projects/olympics/src/App.js":"2","/Users/dea/Code/Projects/olympics/src/Components/FemalePies/FemalePies.js":"3","/Users/dea/Code/Projects/olympics/src/Components/Paralympics/Paralympics.js":"4","/Users/dea/Code/Projects/olympics/src/Components/FirstTimeParticipate/FirstTimeParticipate.js":"5","/Users/dea/Code/Projects/olympics/src/Components/SustainabilityTimeline/SustainabilityTimeline.js":"6","/Users/dea/Code/Projects/olympics/src/Components/Footer/Footer.js":"7","/Users/dea/Code/Projects/olympics/src/Components/FrontPage/FrontPage.js":"8","/Users/dea/Code/Projects/olympics/src/Components/FemalePies/Pie.js":"9"},{"size":150,"mtime":1614562994892,"results":"10","hashOfConfig":"11"},{"size":699,"mtime":1614562994890,"results":"12","hashOfConfig":"11"},{"size":7742,"mtime":1614649178084,"results":"13","hashOfConfig":"11"},{"size":12370,"mtime":1614648013205,"results":"14","hashOfConfig":"11"},{"size":11594,"mtime":1614562994891,"results":"15","hashOfConfig":"11"},{"size":10240,"mtime":1614562994892,"results":"16","hashOfConfig":"11"},{"size":333,"mtime":1614562994891,"results":"17","hashOfConfig":"11"},{"size":1851,"mtime":1614562994891,"results":"18","hashOfConfig":"11"},{"size":4551,"mtime":1614649770690,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1chgwbj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dea/Code/Projects/olympics/src/index.js",[],["43","44"],"/Users/dea/Code/Projects/olympics/src/App.js",["45"],"import React, {useState} from \"react\";\nimport \"./App.css\";\nimport FemalePies from \"./Components/FemalePies/FemalePies\";\nimport SustainabilityTimeline from \"./Components/SustainabilityTimeline/SustainabilityTimeline\";\nimport FirstTimeParticipate from \"./Components/FirstTimeParticipate/FirstTimeParticipate\"\nimport Paralympics from \"./Components/Paralympics/Paralympics\";\nimport FrontPage from \"./Components/FrontPage/FrontPage\";\nimport Footer from \"./Components/Footer/Footer\"\n\nconst App = () => {\n  \n  return (\n    <>\n      <FrontPage />\n      <FirstTimeParticipate />\n      <Paralympics />\n      <SustainabilityTimeline />\n      <FemalePies />\n      <Footer /> \n    </>\n  )\n};\n\nexport default App;","/Users/dea/Code/Projects/olympics/src/Components/FemalePies/FemalePies.js",["46","47","48","49","50","51"],"/Users/dea/Code/Projects/olympics/src/Components/Paralympics/Paralympics.js",["52","53","54","55","56","57","58","59","60","61"],"/Users/dea/Code/Projects/olympics/src/Components/FirstTimeParticipate/FirstTimeParticipate.js",["62","63","64","65","66","67","68","69","70","71","72","73","74"],"// Data from https://en.wikipedia.org/wiki/List_of_participating_nations_at_the_Summer_Olympic_Games\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./FirstTimeParticipate.css\";\nimport dataLoad from \"../../data/countries_first_year.json\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBookOpen, faHome } from '@fortawesome/free-solid-svg-icons'\nimport _ from \"lodash\"\nimport chroma from \"chroma-js\";\n\nconst GraphExplain = () => {\n  return (\n    <div className=\"graph-explain-container\">\n      <p>Data source: <a href=\"https://en.wikipedia.org/wiki/List_of_participating_nations_at_the_Summer_Olympic_Games\" target=\"_blank\">Wikipedia</a></p>\n      <p className=\"disclaimer\">Use the source to research further. Why did certain countries enter the Olympics later than others? Which countries or regions participated as part of other entities previously; did they welcome the chance to compete in the Olympics independently?</p>\n    </div>\n  )\n}\n\nconst FirstTimeParticipate = () => {\n\n  /// refs ///\n  const svgRef = useRef();\n  const gRef = useRef();\n  const xAxisRef = useRef();\n  const playButtonRef = useRef();\n  const tooltipRef = useRef();\n  const legendRef = useRef();\n  const legendAxisRef = useRef();\n\n  /// states ///\n  const [data, setData] = useState(null);\n  const [revealGraphExplanation, setRevealGraphExplanation] = useState(false);\n\n  /// constatns ///\n  // dimensions \n  const width = 2000;\n  const height = 480;\n  const margin = {top: 35, right: 60, bottom: 27, left: 40}\n\n\n  /// Data load ///\n  useEffect(() => {\n    setData(dataLoad)\n  }, []);\n\n  /// D3 Code ///\n  useEffect(() => {\n    if (data) {\n\n      const svg = d3.select(svgRef.current)\n\n      // find the range of years \n      const years = dataLoad.map(d => +d.first_year).sort((a, b) => a - b)\n\n      // special case: countries on multiple continents - Asia and Europe \n      const countriesMultipleContinents = ['Armenia','Azerbaijan','Cyprus','Georgia','Kazakhstan','Russia','Turkey']\n\n      /// Scales ///\n      const xScale = d3.scaleBand()\n        .domain(years)\n        .range([margin.left, width - margin.right])\n        .padding(0.1)\n\n      // Colour scale for the continents \n      const continents = _.uniq(data.map(d => d.continent))\n      //[\"Asia\", \"missing\", \"Europe\", \"Africa\", \"North America\", \"South America\", \"Oceania\"]\n      const continentsColours = {\n        \"Asia\": \"#ff006e\",\n        \"Europe\": \"#81568F\",\n        \"Africa\": \"#f8961e\",\n        \"North America\": \"#43aa8b\",\n        \"South America\": chroma(\"#219ebc\").saturate(0.5),\n        \"Oceania\": \"#90be6d\",\n        \"missing\": chroma(\"#22223b\").saturate(0.5)\n      }\n\n      // Colour gradient for the counties which are in Europe and Asia \n      const defs = svg.selectAll(\"defs\").data([0]).join(\"defs\")\n      const linearGradient = defs.append(\"linearGradient\")\n        .attr(\"id\", \"linear-gradient\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"x2\", \"100%\")\n        .attr(\"y2\", \"100%\");\n      //Set the color for the start (0%)\n      linearGradient.append(\"stop\") \n        .attr(\"offset\", \"0%\")\n        .attr(\"stop-color\", continentsColours['Asia']); \n      //Set the color for the end (100%)\n      linearGradient.append(\"stop\")\n        .attr(\"offset\", \"100%\")\n        .attr(\"stop-color\", continentsColours['Europe']); \n\n      // Set up the start //       \n      const startingXPosition = 250 + margin.left;\n      const startingYPosition = 150 + margin.top;\n      const gNodes = d3.select(gRef.current)\n        .attr(\"transform\", `translate(${startingXPosition}, ${startingYPosition})`)\n\n      /// Timeline axis ///\n      const xAxis = g => g\n        .attr(\"transform\", `translate(${0}, ${height - margin.bottom})`)\n        .call(d3.axisBottom(xScale).tickFormat(i => i).tickSizeOuter(0)) \n        .call(g => g.select(\".domain\")\n          .attr(\"color\", \"#219ebc\")\n          .attr(\"stroke-width\", 8)\n          .attr(\"stroke-linecap\", \"round\")\n        )\n        .call(g => g.selectAll(\".tick\").selectAll(\"line\").remove())\n        .call(g => g.selectAll(\"text\")\n          .attr(\"fill\", \"#219ebc\")\n          .attr(\"font-size\", \"18px\")\n          .attr(\"font-family\", 'Indie Flower, cursive'))\n\n      d3.select(xAxisRef.current).call(xAxis)\n\n\n      ////////////////////////\n      ////  Force Graph  /////\n      ////////////////////////\n      const nodes = gNodes\n        .selectAll(\".node\")\n        .data(data, d => d) \n        .join(\"circle\")\n          .classed(\"node\", true)\n          .attr(\"r\", 5) \n          //.attr(\"fill\", d => continentsColours[d.continent])\n          .attr(\"fill\", d => (\n            countriesMultipleContinents.includes(d.country)\n            ? \"url(#linear-gradient)\"\n            : continentsColours[d.continent]\n          ))\n          .attr(\"fill-opacity\", 0.8)\n          .attr(\"stroke\", d => (\n            countriesMultipleContinents.includes(d.country)\n            ? \"url(#linear-gradient)\"\n            : continentsColours[d.continent]\n          ))\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke-opacity\", 1)\n\n      function tick() {\n        nodes\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y);\n      }\n\n      /// define the force ///\n      const simulation = d3.forceSimulation(data)\n        // the .strength() for x and y forces can slow them down and speed them up \n        .force(\"y\", d3.forceY((d, i) => height/1.6 - startingYPosition).strength(0.01))\n        .force(\"x\", d3.forceX((d, i) =>  xScale(+d.first_year) + xScale.bandwidth()/2 - startingXPosition).strength(0.03))\n        .force(\"collide\", d3.forceCollide(10))\n        .alphaDecay(0.001) // this makes the collide force more or less gittery\n        .on(\"tick\", tick)\n        .stop();\n\n      tick();\n\n      ///////////////////\n      /// Play button ///\n      ///////////////////\n      const playButton = d3.select(playButtonRef.current)\n        .on(\"click\", function() {\n          setTimeout(() => {\n            simulation.restart();\n            nodes.transition().attr(\"r\", r => 6);\n          }, 500);\n        })\n\n      ///////////////////\n      ///// Tooltip /////\n      ///////////////////\n      const tooltip = d3.select(tooltipRef.current)\n      nodes\n      .on('mouseenter', (e, datum) => {\n        tooltip \n        .style('transform', d => `translate(\n            ${xScale(+datum.first_year)}px,\n            ${120}px`\n          ) \n        .style(\"opacity\", 1)\n        .text(`${datum.country} ${datum.first_year}`)\n      })\n      .on('mouseleave', () => {\n        tooltip.style(\"opacity\", 0)\n      })\n\n      ///////////////////\n      ///// Legend //////\n      ///////////////////\n      const legendG = d3.select(legendRef.current)\n        .attr(\"transform\", `translate(${0}, ${margin.top})`)\n      \n      const legendScale = d3.scaleBand()\n        .domain(Object.keys(continentsColours))\n        .range([width/2.5, width/1.8])\n\n      // Groups for each circle-continent paid \n      const legendGroups = legendG\n        .selectAll(\".legend-group\")\n        .data(Object.keys(continentsColours))\n        .join(\"g\")\n        .classed(\"legend-group\", true)\n        .attr(\"transform\", d => `translate(${legendScale(d) + legendScale.bandwidth()/2}, ${0})`)\n\n      // Title on top of the legend \n      const legendTitle = legendG\n        .selectAll(\".legend-title\")\n        .data(['each circle = country, coloured by continent; click to filter'])\n        .join(\"text\")\n        .classed(\"legend-text\", true)\n        .text(d => d)\n        .attr(\"transform\", `translate(${width/2.5 - 25}, ${-28})`)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"fill\", \"#219ebc\")\n      \n      // Circles for the legend \n      const legendCircles = legendGroups \n        .selectAll(\".legend-circle\")\n        .data(d => [d])\n        .join(\"circle\")\n        .classed(\"legend-circle\", true)\n          .attr(\"r\", 10)\n          .attr(\"fill\", d => continentsColours[d])\n          .attr(\"fill-opacity\", 0.8)\n          .attr(\"stroke\", d => continentsColours[d])\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke-opacity\", 1)\n\n\n      // X Axis \n      const legendXAxis = g => g\n        .call(d3.axisBottom(legendScale).tickFormat(\n          i => i == \"missing\" ? \"no longer exists / renamed / other\" : i\n        ))\n        .attr(\"transform\", `translate(${0}, ${45})`)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\"text\")\n          .attr(\"transform\", `rotate(-30)`)\n          .attr(\"text-anchor\", \"end\")\n          .style(\"fill\", d => continentsColours[d])\n          .attr(\"font-family\", 'Indie Flower, cursive')\n          .style(\"font-size\", \"1.2em\")\n        )\n        .call(g => g.selectAll(\".tick\")\n          .style(\"color\", d => continentsColours[d])\n        )\n\n      d3.select(legendAxisRef.current).call(legendXAxis)\n\n      // Events on the legend \n      legendCircles\n        .on(\"click\", function(e, datum) {\n          legendCircles\n            .attr(\"fill-opacity\", d => d == datum ? 0.8 : 0.06)\n            .attr(\"stroke-opacity\", d => d == datum ? 1 : 0.1)\n          d3.select(legendAxisRef.current).call(legendXAxis)\n            .call(g => g.selectAll(\".tick\")\n            .style(\"opacity\", d => d == datum ? 1 : 0.06)\n          )\n          nodes\n            .attr(\"fill-opacity\", d => \n            d.continent == datum ? 0.8 : 0.06\n            )\n            .attr(\"stroke-opacity\", d => d.continent == datum ? 1 : 0.1)\n        })\n\n\n        // for the event where we restore the opacity when we click outisde the legend \n        svg\n          .on(\"click\",function(e, datum){\n            // check if the click ocurred on the target or not \n            // if it's \"false\" then the click did not happen on the target \n            console.log(e.target)\n            console.log(this == e.target)\n            if (this == e.target) {\n              legendCircles\n                .attr(\"fill-opacity\", 0.8)\n                .attr(\"stroke-opacity\", 1)\n              d3.select(legendAxisRef.current).call(legendXAxis)\n                .call(g => g.selectAll(\".tick\")\n                .style(\"opacity\", 1)\n              ) \n              nodes\n                .attr(\"fill-opacity\", 0.8)\n                .attr(\"stroke-opacity\", 1)\n            }\n        });\n\n\n      \n\n\n\n    } \n  }, [data]);\n\n  const toggleGraphExplanation = () => {\n    setRevealGraphExplanation(!revealGraphExplanation)\n  }\n\n  return (\n    <div className=\"page-container page-container-first-time\" id=\"first-time\">\n      <h2 className=\"graph-title graph-title-first-time\">When did countries first participate in the Olympics?</h2>\n      <div className=\"mascot-first-time\"></div>\n\n      <button className=\"icon home-icon\">\n        <a href=\"#home\" className=\"home-first-time\"><FontAwesomeIcon icon={faHome}/></a>\n        <span className=\"info-span\"></span>\n      </button>  \n\n      <button \n        className=\"icon graph-explain-icon\" \n        onClick={toggleGraphExplanation}\n      >\n        <FontAwesomeIcon icon={faBookOpen} />\n        <span className=\"info-span\"></span>\n      </button>  \n      {\n        revealGraphExplanation \n        ? <GraphExplain />\n        : null\n      } \n\n      <div className=\"wrapper wrapper-first-time\">\n        <svg ref={svgRef} width={width} height={height}>\n          <g ref={gRef}></g>\n          <g ref={xAxisRef}></g>\n          <g ref={legendRef}></g>\n          <g ref={legendAxisRef}></g>\n        </svg>\n        <div className=\"play-button-first-time\" ref={playButtonRef}>play</div>\n        <div className=\"tooltip-first-time\" ref={tooltipRef}>Tooltip</div>\n      </div>\n\n    </div>\n  )\n};\n\nexport default FirstTimeParticipate;","/Users/dea/Code/Projects/olympics/src/Components/SustainabilityTimeline/SustainabilityTimeline.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"// Data from https://www.researchgate.net/publication/340446440_ENVIRONMENTAL_SUSTAINABILITY_OF_OLYMPIC_GAMES_A_NARRATIVE_REVIEW_OF_EVENTS_INITIATIVES_IMPACT_AND_HIDDEN_ASPECTS\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./SustainabilityTimeline.css\";\nimport _ from \"lodash\";\nimport chroma from \"chroma-js\";\nimport rough from 'roughjs/bundled/rough.cjs';\nimport dataLoad from \"../../data/environmental_cal.csv\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBookOpen, faLaughBeam, faHome } from '@fortawesome/free-solid-svg-icons'\n\nconst GraphExplain = () => {\n  return (\n    <div className=\"graph-explain-container\">\n      <p>Data source: <a href=\"https://www.researchgate.net/publication/340446440_ENVIRONMENTAL_SUSTAINABILITY_OF_OLYMPIC_GAMES_A_NARRATIVE_REVIEW_OF_EVENTS_INITIATIVES_IMPACT_AND_HIDDEN_ASPECTS\" target=\"_blank\">\n        \"Maria Konstantaki (2018) \"Environmental Sustainability of Olympic Games: a Narrative Review of Events, Initiatives, Impact and Hidden Aspects\"\n        </a>\n      </p>\n      <p className=\"disclaimer\"> \n        Timeline of major positive and negative environmental events/initiatives/outcomes at or related to the Olympics. Based on events described in paper by Maria Konstantaki (2018). \n      </p>\n      <p className=\"disclaimer\"> \n        What do you think the positive and negative environmental impact of the Olympics is? Do you know about the recycling efforts for Tokyo 2020? Why do you think the medals were made from recycled electronics, for example? What would you do if you were organising the games to ensure they have a positive impact? \n      </p>\n    </div>\n  )\n}\n\nconst SustainabilityTimeline = () => {\n\n  /// refs ///\n  const svgRef = useRef();\n  const xAxisRef = useRef();\n  const gRef = useRef();\n  const tooltipRef = useRef();\n  const legendRef = useRef();\n\n  /// states ///\n  const [data, setData] = useState(null);\n  const [revealGraphExplanation, setRevealGraphExplanation] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  /// constatns ///\n  // dimensions \n  const width = 1100;\n  const height = 500;\n  const margin = {top: 20, right: 50, bottom: 0, left: 50}\n  // colours \n  const positiveColour = chroma(\"#43aa8b\").saturate(1)\n  const negativeColour = chroma(\"#f8961e\").saturate(1)\n  const greenColour = \"#43aa8b\"\n\n\n  /// Data load ///\n  useEffect(() => {\n    d3.csv(dataLoad, d3.autoType).then(d => {\n      setData(d)\n    })\n  }, []);\n\n  /// D3 Code ///\n  useEffect(() => {\n    if (data) {\n\n      let rc = rough.svg(document.getElementById(\"svg-sustainability-timeline\"));\n\n      /// Scales ///\n      // X Scale - year timeline \n      const xScale = d3.scalePoint()\n        .domain(data.map(d => d.year))\n        .range([margin.left, width - margin.right])\n\n\n      /// Axes ///\n      // X Axis - the years timeline \n      const xAxis = g => g\n        .attr(\"transform\", `translate(${0}, ${height/1.5})`)\n        .call(d3.axisBottom(xScale).tickFormat(i => i).tickSizeOuter(0))\n        .call(g => g.select(\".domain\")\n          .attr(\"color\", greenColour)\n          .attr(\"stroke-width\", 8)\n          .attr(\"stroke-linecap\", \"round\")\n        )\n        .call(g => g.selectAll(\".tick\").selectAll(\"line\").remove())\n        .call(g => g.selectAll(\"text\")\n          .attr(\"fill\", greenColour)\n          .attr(\"font-size\", \"18px\")\n          .attr(\"font-family\", 'Indie Flower, cursive')\n        )\n        \n      // call the axis \n      d3.select(xAxisRef.current).call(xAxis)\n\n      /// Graph ///\n      // Graphing area\n      const g = d3.select(gRef.current)\n      .attr(\"transform\", `translate(${0}, ${height/1.5})`)\n\n      // one group for each event\n      const timelineLinesGroups = g\n        .selectAll(\".timeline-lines\")\n        .data(data)\n        .join(\"g\")\n        .classed(\"timeline-lines\", true)\n          .attr(\"transform\", d => `translate(${xScale(d.year)}, ${0})`)\n\n      // draw lines extending from the year when each event happend \n      // either up or down depending on whether the event outcome \n      // was positive or negative\n      const timelineLines = timelineLinesGroups\n        .append(\"line\")\n          .attr(\"y1\", 0)\n          .attr(\"y2\", d => \n          (d.polarity == \"negative\") \n            ? 100\n            : d.olympics == \"no\"\n            ? -200\n            : -100\n          )\n          .attr(\"stroke\", \"white\")\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke-opacity\", 0.5)\n          .attr(\"stroke-dasharray\", \"1 1\")\n\n\n      // draw one shape (circle) for each event that happened\n      // use conditionals to change the colour or the pattern of the fill \n      // based on whether the even was an olympics or good or bad outcome\n      const eventShapes = timelineLinesGroups\n        .each(function(d, i) {\n          \n          d3.select(this).node()\n            .appendChild(\n              rc.circle(0, \n                d.polarity == \"negative\"\n                ? 100\n                : d.olympics == \"no\"\n                  ? -200\n                : -100, \n                80, {\n                stroke: d.polarity == 'negative' ? negativeColour : positiveColour,\n                strokeWidth: 1.7,\n                fillStyle: d.olympics == 'no' ? 'zigzag-line' : 'cross-hatch',\n                fill: d.polarity == 'negative' ? negativeColour : positiveColour,\n                roughness: 2,\n          })\n          )\n        })\n\n\n      // Add a normal circle behind each rough circle just for the hover events\n      const eventCircles = timelineLinesGroups\n        .selectAll(\".event-circle\")\n        .data(d => [d])\n        .join(\"circle\")\n        .classed(\"event-circle\", true)\n          .attr(\"cx\", 0)\n          .attr(\"cy\", d => d.polarity == \"negative\"? 100 : d.olympics == \"no\" ? -200 : -100)\n          .attr(\"r\", 40)\n          .attr(\"opacity\", 0.5)\n          .attr(\"fill\", d => d.polarity == 'negative' ? negativeColour : positiveColour)\n\n\n      /// Tooltip ///\n      const tooltip = d3.select(tooltipRef.current)\n      eventCircles\n      .on('mouseenter', (e, datum) => {\n        setSelectedEvent(datum)\n        tooltip \n        .style('transform', d => `translate(\n            ${xScale(datum.year)}px,\n            ${\n              datum.polarity == \"negative\"\n              ? 100 + 100\n              : datum.olympics == \"no\"\n                ? -200 + 100\n              : -100 + 100\n            }px`\n          ) \n        .style(\"opacity\", 1)\n      })\n      .on('mouseleave', () => {\n        tooltip.style(\"opacity\", 0)\n      })\n\n      /////////////////////\n      ///// legend ///////\n      ///////////////////\n\n      const legend = d3.select(legendRef.current)\n\n      // positive outcome \n      legend.each(function(d, i) {\n        d3.select(this).node()\n          .appendChild(\n            rc.circle(width - margin.right - 160, margin.top, 20, {\n              stroke: positiveColour,\n              strokeWidth: 1,\n              fillStyle: 'cross-hatch',\n              fill: positiveColour,\n              roughness: 1.7,\n          })\n        )\n      }) \n      legend.selectAll(\".legend-label-positive\").data(['positive outcome']).join(\"text\")\n        .classed(\"legend-label-positive\", true)\n        .text(d => d)\n        .attr(\"transform\", `translate(${width - margin.right - 290}, ${margin.top})`)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"fill\", positiveColour)\n\n      // negative outcome \n      legend.each(function(d, i) {\n        d3.select(this).node()\n          .appendChild(\n            rc.circle(width - margin.right, margin.top, 20, {\n              stroke: negativeColour,\n              strokeWidth: 1,\n              fillStyle: 'cross-hatch',\n              fill: negativeColour,\n              roughness: 1.7,\n          })\n        )\n      })   \n      legend.selectAll(\".legend-label-negative\").data(['negative outcome']).join(\"text\")\n        .classed(\"legend-label-negative\", true)\n        .text(d => d)\n        .attr(\"transform\", `translate(${width - margin.right - 130}, ${margin.top})`)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"fill\", negativeColour)     \n\n\n\n    } \n  }, [data]);\n\n  const toggleGraphExplanation = () => {\n    setRevealGraphExplanation(!revealGraphExplanation)\n  }\n\n  return (\n    <div className=\"page-container page-container-sustainability-timeline\" id=\"environment\">\n      <div className=\"mascot-sustainability-timeline\"></div>\n      <h2 className=\"graph-title graph-title-sustainability-timeline\">How do the Olympics impact the environment?</h2>\n\n      <button className=\"icon home-icon\">\n        <a href=\"#home\" className=\"home-sustainability-timeline\"><FontAwesomeIcon icon={faHome}/></a>\n        <span className=\"info-span\"></span>\n      </button>  \n\n      <button \n        className=\"icon graph-explain-icon\" \n        onClick={toggleGraphExplanation}\n      >\n        <FontAwesomeIcon icon={faBookOpen} />\n        <span className=\"info-span\"></span>\n      </button>  \n      {\n        revealGraphExplanation \n        ? <GraphExplain />\n        : null\n      } \n\n      <div className=\"wrapper wrapper-sustainability-timeline\">\n        <svg id=\"svg-sustainability-timeline\" ref={svgRef} width={width} height={height}>\n            <g ref={gRef}></g>\n            <g ref={xAxisRef}></g>\n            <g ref={legendRef}></g>\n        </svg>\n        <div className=\"tooltip-sustainability-timeline\" ref={tooltipRef}>\n          { selectedEvent ?\n           <div>\n             {selectedEvent.polarity === \"positive\" ? \n              <>\n                <span className=\"tooltip-sustainability-timeline-title tooltip-sustainability-timeline-pos\"><FontAwesomeIcon icon={faLaughBeam} /></span>\n                <span className=\"tooltip-sustainability-timeline-title tooltip-sustainability-timeline-pos\">{selectedEvent.event}</span>\n              </>\n             : \n              <>\n                <span className=\"tooltip-sustainability-timeline-title tooltip-sustainability-timeline-neg\">{selectedEvent.event}</span>\n              </>\n             }\n              <span className=\"tooltip-sustainability-timeline-info\">{selectedEvent.notes}</span>     \n            </div> \n            : null\n          }\n        </div>\n      </div>\n\n    </div>\n  )\n};\n\nexport default SustainabilityTimeline;","/Users/dea/Code/Projects/olympics/src/Components/Footer/Footer.js",[],"/Users/dea/Code/Projects/olympics/src/Components/FrontPage/FrontPage.js",["92"],"import React from \"react\"; \nimport \"./FrontPage.css\";\n\nconst FrontPage = () => {\n  return (\n    <div className=\"container-front-page\" id=\"home\">\n      <div className=\"title-decoration-front-page\">\n        <div className=\"olympic-circle\"></div>\n        <div className=\"olympic-circle\"></div>\n        <h1 className=\"title-front-page\">Olympics & Paralympics Facts and Legacy</h1>\n        <div className=\"olympic-circle\"></div>\n        <div className=\"olympic-circle\"></div>\n      </div>\n\n      <div className=\"content-front-page\">\n        <div className=\"explanation-front-page\">\n          Materials for a collaborative project between the Universites of Tokyo and Tsukuba on the topic of \"School Trip Around the Olympics Sports Museum\". The questions and accompanying visualisations serve the purpose of cues for group discussions among the students before they visit the museum. They aim to bring up important topics around the history and goals of the Olympics and Paralympics, aimed at secondary school students in Japan. This is a rough draft =). Ideally we would like to explore further topics and find more appropriate materials around the selected ones. Japanese version <a href=\"https://olympicsjp.netlify.app/\" target=\"_blank\" className=\"jp-link\">here</a>\n        </div>\n        <div className=\"contents-list-front-page\">\n          <h2 className=\"contents-label-front-page\">Contents</h2>\n          <a href=\"#first-time\"><p>When did countries first participate in the Olympics?</p></a>\n          <a href=\"#paralympics\"><p>What is the history and timeline of the Paralympics?</p></a>\n          <a href=\"#environment\"><p>How do the Olympics impact the environment?</p></a>   \n          <a href=\"#gender\"><p>What is the athlete  gender split at the Olympics?</p></a>       \n        </div>\n      </div>\n\n\n    </div>\n  )\n};\n\nexport default FrontPage;","/Users/dea/Code/Projects/olympics/src/Components/FemalePies/Pie.js",["93","94","95","96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":15,"column":23,"nodeType":"111","endLine":15,"endColumn":219},{"ruleId":"105","severity":1,"message":"112","line":119,"column":13,"nodeType":"107","messageId":"108","endLine":119,"endColumn":18},{"ruleId":"105","severity":1,"message":"113","line":155,"column":13,"nodeType":"107","messageId":"108","endLine":155,"endColumn":26},{"ruleId":"105","severity":1,"message":"114","line":164,"column":13,"nodeType":"107","messageId":"108","endLine":164,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":168,"column":74,"nodeType":"117","messageId":"118","endLine":168,"endColumn":76},{"ruleId":"119","severity":1,"message":"120","line":197,"column":6,"nodeType":"121","endLine":197,"endColumn":21,"suggestions":"122"},{"ruleId":"105","severity":1,"message":"123","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":32},{"ruleId":"109","severity":1,"message":"110","line":22,"column":9,"nodeType":"111","endLine":22,"endColumn":89},{"ruleId":"109","severity":1,"message":"110","line":24,"column":9,"nodeType":"111","endLine":24,"endColumn":86},{"ruleId":"105","severity":1,"message":"124","line":133,"column":13,"nodeType":"107","messageId":"108","endLine":133,"endColumn":26},{"ruleId":"105","severity":1,"message":"125","line":147,"column":13,"nodeType":"107","messageId":"108","endLine":147,"endColumn":31},{"ruleId":"105","severity":1,"message":"126","line":211,"column":11,"nodeType":"107","messageId":"108","endLine":211,"endColumn":23},{"ruleId":"105","severity":1,"message":"127","line":248,"column":13,"nodeType":"107","messageId":"108","endLine":248,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":253,"column":71,"nodeType":"117","messageId":"118","endLine":253,"endColumn":73},{"ruleId":"115","severity":1,"message":"116","line":293,"column":34,"nodeType":"117","messageId":"118","endLine":293,"endColumn":36},{"ruleId":"119","severity":1,"message":"128","line":306,"column":6,"nodeType":"121","endLine":306,"endColumn":45,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"110","line":15,"column":23,"nodeType":"111","endLine":15,"endColumn":137},{"ruleId":"105","severity":1,"message":"130","line":67,"column":13,"nodeType":"107","messageId":"108","endLine":67,"endColumn":23},{"ruleId":"105","severity":1,"message":"131","line":165,"column":13,"nodeType":"107","messageId":"108","endLine":165,"endColumn":23},{"ruleId":"105","severity":1,"message":"132","line":210,"column":13,"nodeType":"107","messageId":"108","endLine":210,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":237,"column":18,"nodeType":"117","messageId":"118","endLine":237,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":258,"column":42,"nodeType":"117","messageId":"118","endLine":258,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":259,"column":44,"nodeType":"117","messageId":"118","endLine":259,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":262,"column":38,"nodeType":"117","messageId":"118","endLine":262,"endColumn":40},{"ruleId":"115","severity":1,"message":"116","line":266,"column":25,"nodeType":"117","messageId":"118","endLine":266,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":268,"column":54,"nodeType":"117","messageId":"118","endLine":268,"endColumn":56},{"ruleId":"115","severity":1,"message":"116","line":278,"column":30,"nodeType":"117","messageId":"118","endLine":278,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":279,"column":22,"nodeType":"117","messageId":"118","endLine":279,"endColumn":24},{"ruleId":"119","severity":1,"message":"133","line":299,"column":6,"nodeType":"121","endLine":299,"endColumn":12,"suggestions":"134"},{"ruleId":"105","severity":1,"message":"135","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":9},{"ruleId":"109","severity":1,"message":"110","line":16,"column":23,"nodeType":"111","endLine":16,"endColumn":213},{"ruleId":"105","severity":1,"message":"136","line":111,"column":13,"nodeType":"107","messageId":"108","endLine":111,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":115,"column":23,"nodeType":"117","messageId":"118","endLine":115,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":117,"column":26,"nodeType":"117","messageId":"118","endLine":117,"endColumn":28},{"ruleId":"105","severity":1,"message":"137","line":130,"column":13,"nodeType":"107","messageId":"108","endLine":130,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":136,"column":28,"nodeType":"117","messageId":"118","endLine":136,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":138,"column":30,"nodeType":"117","messageId":"118","endLine":138,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":142,"column":36,"nodeType":"117","messageId":"118","endLine":142,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":144,"column":39,"nodeType":"117","messageId":"118","endLine":144,"endColumn":41},{"ruleId":"115","severity":1,"message":"116","line":145,"column":34,"nodeType":"117","messageId":"118","endLine":145,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":159,"column":39,"nodeType":"117","messageId":"118","endLine":159,"endColumn":41},{"ruleId":"115","severity":1,"message":"116","line":159,"column":71,"nodeType":"117","messageId":"118","endLine":159,"endColumn":73},{"ruleId":"115","severity":1,"message":"116","line":162,"column":41,"nodeType":"117","messageId":"118","endLine":162,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":174,"column":30,"nodeType":"117","messageId":"118","endLine":174,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":176,"column":32,"nodeType":"117","messageId":"118","endLine":176,"endColumn":34},{"ruleId":"119","severity":1,"message":"138","line":236,"column":6,"nodeType":"121","endLine":236,"endColumn":12,"suggestions":"139"},{"ruleId":"109","severity":1,"message":"110","line":17,"column":600,"nodeType":"111","endLine":17,"endColumn":678},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"135","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":9},{"ruleId":"105","severity":1,"message":"112","line":44,"column":13,"nodeType":"107","messageId":"108","endLine":44,"endColumn":18},{"ruleId":"105","severity":1,"message":"114","line":72,"column":13,"nodeType":"107","messageId":"108","endLine":72,"endColumn":22},{"ruleId":"105","severity":1,"message":"140","line":96,"column":13,"nodeType":"107","messageId":"108","endLine":96,"endColumn":23},{"ruleId":"105","severity":1,"message":"141","line":125,"column":13,"nodeType":"107","messageId":"108","endLine":125,"endColumn":31},{"ruleId":"105","severity":1,"message":"142","line":132,"column":13,"nodeType":"107","messageId":"108","endLine":132,"endColumn":29},{"ruleId":"119","severity":1,"message":"143","line":144,"column":6,"nodeType":"121","endLine":144,"endColumn":12,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'svgD3' is assigned a value but never used.","'pieChartsText' is assigned a value but never used.","'pieCharts' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colourFemale', 'colourMale', 'height', 'margin.right', 'margin.top', and 'outerRadius'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'annotationCalloutElbow' is defined but never used.","'athletesGraph' is assigned a value but never used.","'athletesGraphRough' is assigned a value but never used.","'myAnnotation' is assigned a value but never used.","'sportsLogo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'margin.left', 'margin.right', and 'margin.top'. Either include them or remove the dependency array.",["148"],"'continents' is assigned a value but never used.","'playButton' is assigned a value but never used.","'legendTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', and 'margin.top'. Either include them or remove the dependency array.",["149"],"'_' is defined but never used.","'timelineLines' is assigned a value but never used.","'eventShapes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'margin.left', 'margin.right', 'margin.top', 'negativeColour', and 'positiveColour'. Either include them or remove the dependency array.",["150"],"'pieCharts2' is assigned a value but never used.","'revealButtonCircle' is assigned a value but never used.","'revealButtonText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colourFemale', 'colourMale', 'outerRadius', 'setShow', and 'width'. Either include them or remove the dependency array. If 'setShow' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [colourFemale, colourMale, dataAll, height, margin.right, margin.top, outerRadius, show]",{"range":"162","text":"163"},"Update the dependencies array to be: [data, dataSports, margin.left, margin.right, margin.top, sports, sportsLogos]",{"range":"164","text":"165"},"Update the dependencies array to be: [data, margin.bottom, margin.left, margin.right, margin.top]",{"range":"166","text":"167"},"Update the dependencies array to be: [data, margin.left, margin.right, margin.top, negativeColour, positiveColour]",{"range":"168","text":"169"},"Update the dependencies array to be: [colourFemale, colourMale, outerRadius, setShow, show, width]",{"range":"170","text":"171"},[6450,6465],"[colourFemale, colourMale, dataAll, height, margin.right, margin.top, outerRadius, show]",[10680,10719],"[data, dataSports, margin.left, margin.right, margin.top, sports, sportsLogos]",[10245,10251],"[data, margin.bottom, margin.left, margin.right, margin.top]",[8113,8119],"[data, margin.left, margin.right, margin.top, negativeColour, positiveColour]",[4314,4320],"[colourFemale, colourMale, outerRadius, setShow, show, width]"]